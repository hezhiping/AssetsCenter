<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.assets.mapper.AssetOutMapper" >
  <resultMap id="BaseResultMap" type="com.assets.pojo.AssetOut" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="psn_code" property="psnCode" jdbcType="INTEGER" />
    <result column="current_month" property="currentMonth" jdbcType="VARCHAR" />
    <result column="original_capital" property="originalCapital" jdbcType="DECIMAL" />
    <result column="income_surplus" property="incomeSurplus" jdbcType="DECIMAL" />
    <result column="ratained_profit" property="ratainedProfit" jdbcType="DECIMAL" />
    <result column="tag_status" property="tagStatus" jdbcType="CHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="current_year" property="currentYear" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.assets.pojo.AssetOut" extends="BaseResultMap" >
    <result column="json_data" property="jsonData" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, psn_code, current_month, original_capital, income_surplus, ratained_profit, tag_status, 
    create_date, current_year
  </sql>
  <sql id="Blob_Column_List" >
    json_data
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.assets.pojo.AssetOutExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from asset_out
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.assets.pojo.AssetOutExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from asset_out
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from asset_out
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from asset_out
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.assets.pojo.AssetOutExample" >
    delete from asset_out
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.assets.pojo.AssetOut" >
    insert into asset_out (id, psn_code, current_month, 
      original_capital, income_surplus, ratained_profit, 
      tag_status, create_date, current_year, 
      json_data)
    values (#{id,jdbcType=INTEGER}, #{psnCode,jdbcType=INTEGER}, #{currentMonth,jdbcType=VARCHAR}, 
      #{originalCapital,jdbcType=DECIMAL}, #{incomeSurplus,jdbcType=DECIMAL}, #{ratainedProfit,jdbcType=DECIMAL}, 
      #{tagStatus,jdbcType=CHAR}, #{createDate,jdbcType=TIMESTAMP}, #{currentYear,jdbcType=VARCHAR}, 
      #{jsonData,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.assets.pojo.AssetOut" >
    insert into asset_out
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="psnCode != null" >
        psn_code,
      </if>
      <if test="currentMonth != null" >
        current_month,
      </if>
      <if test="originalCapital != null" >
        original_capital,
      </if>
      <if test="incomeSurplus != null" >
        income_surplus,
      </if>
      <if test="ratainedProfit != null" >
        ratained_profit,
      </if>
      <if test="tagStatus != null" >
        tag_status,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="currentYear != null" >
        current_year,
      </if>
      <if test="jsonData != null" >
        json_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="psnCode != null" >
        #{psnCode,jdbcType=INTEGER},
      </if>
      <if test="currentMonth != null" >
        #{currentMonth,jdbcType=VARCHAR},
      </if>
      <if test="originalCapital != null" >
        #{originalCapital,jdbcType=DECIMAL},
      </if>
      <if test="incomeSurplus != null" >
        #{incomeSurplus,jdbcType=DECIMAL},
      </if>
      <if test="ratainedProfit != null" >
        #{ratainedProfit,jdbcType=DECIMAL},
      </if>
      <if test="tagStatus != null" >
        #{tagStatus,jdbcType=CHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="currentYear != null" >
        #{currentYear,jdbcType=VARCHAR},
      </if>
      <if test="jsonData != null" >
        #{jsonData,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.assets.pojo.AssetOutExample" resultType="java.lang.Integer" >
    select count(*) from asset_out
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update asset_out
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.psnCode != null" >
        psn_code = #{record.psnCode,jdbcType=INTEGER},
      </if>
      <if test="record.currentMonth != null" >
        current_month = #{record.currentMonth,jdbcType=VARCHAR},
      </if>
      <if test="record.originalCapital != null" >
        original_capital = #{record.originalCapital,jdbcType=DECIMAL},
      </if>
      <if test="record.incomeSurplus != null" >
        income_surplus = #{record.incomeSurplus,jdbcType=DECIMAL},
      </if>
      <if test="record.ratainedProfit != null" >
        ratained_profit = #{record.ratainedProfit,jdbcType=DECIMAL},
      </if>
      <if test="record.tagStatus != null" >
        tag_status = #{record.tagStatus,jdbcType=CHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.currentYear != null" >
        current_year = #{record.currentYear,jdbcType=VARCHAR},
      </if>
      <if test="record.jsonData != null" >
        json_data = #{record.jsonData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update asset_out
    set id = #{record.id,jdbcType=INTEGER},
      psn_code = #{record.psnCode,jdbcType=INTEGER},
      current_month = #{record.currentMonth,jdbcType=VARCHAR},
      original_capital = #{record.originalCapital,jdbcType=DECIMAL},
      income_surplus = #{record.incomeSurplus,jdbcType=DECIMAL},
      ratained_profit = #{record.ratainedProfit,jdbcType=DECIMAL},
      tag_status = #{record.tagStatus,jdbcType=CHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      current_year = #{record.currentYear,jdbcType=VARCHAR},
      json_data = #{record.jsonData,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update asset_out
    set id = #{record.id,jdbcType=INTEGER},
      psn_code = #{record.psnCode,jdbcType=INTEGER},
      current_month = #{record.currentMonth,jdbcType=VARCHAR},
      original_capital = #{record.originalCapital,jdbcType=DECIMAL},
      income_surplus = #{record.incomeSurplus,jdbcType=DECIMAL},
      ratained_profit = #{record.ratainedProfit,jdbcType=DECIMAL},
      tag_status = #{record.tagStatus,jdbcType=CHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      current_year = #{record.currentYear,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.assets.pojo.AssetOut" >
    update asset_out
    <set >
      <if test="psnCode != null" >
        psn_code = #{psnCode,jdbcType=INTEGER},
      </if>
      <if test="currentMonth != null" >
        current_month = #{currentMonth,jdbcType=VARCHAR},
      </if>
      <if test="originalCapital != null" >
        original_capital = #{originalCapital,jdbcType=DECIMAL},
      </if>
      <if test="incomeSurplus != null" >
        income_surplus = #{incomeSurplus,jdbcType=DECIMAL},
      </if>
      <if test="ratainedProfit != null" >
        ratained_profit = #{ratainedProfit,jdbcType=DECIMAL},
      </if>
      <if test="tagStatus != null" >
        tag_status = #{tagStatus,jdbcType=CHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="currentYear != null" >
        current_year = #{currentYear,jdbcType=VARCHAR},
      </if>
      <if test="jsonData != null" >
        json_data = #{jsonData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.assets.pojo.AssetOut" >
    update asset_out
    set psn_code = #{psnCode,jdbcType=INTEGER},
      current_month = #{currentMonth,jdbcType=VARCHAR},
      original_capital = #{originalCapital,jdbcType=DECIMAL},
      income_surplus = #{incomeSurplus,jdbcType=DECIMAL},
      ratained_profit = #{ratainedProfit,jdbcType=DECIMAL},
      tag_status = #{tagStatus,jdbcType=CHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      current_year = #{currentYear,jdbcType=VARCHAR},
      json_data = #{jsonData,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.assets.pojo.AssetOut" >
    update asset_out
    set psn_code = #{psnCode,jdbcType=INTEGER},
      current_month = #{currentMonth,jdbcType=VARCHAR},
      original_capital = #{originalCapital,jdbcType=DECIMAL},
      income_surplus = #{incomeSurplus,jdbcType=DECIMAL},
      ratained_profit = #{ratainedProfit,jdbcType=DECIMAL},
      tag_status = #{tagStatus,jdbcType=CHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      current_year = #{currentYear,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>