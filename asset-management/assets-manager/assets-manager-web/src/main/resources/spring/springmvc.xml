<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd">
    
    <!-- 配置包扫描器   子容器的扫描范围controller，（com.assets把所有的注解都扫描进来）springmvc会优先用自己容器中的，
    	在父容器spring中配置的事务就不好使，所以这里指定只扫描controller -->    
    <context:component-scan base-package="com.assets.controller"></context:component-scan>
    <!-- 要在子容器中访问父容器中的属性：
    	1.可以在子容器中配置 加载配置文件	<context:property-placeholder location="classpath:properties/*.properties" /> 
    	2.可以将父容器中加载的属性，改成public或者提供一个get方法
    -->
    <context:property-placeholder location="classpath:properties/resource.properties" /> 
    <!-- 配置注解驱动 -->
    <mvc:annotation-driven/>
    <!-- 视图解析器 -->
    <!--prefix下的value路径 + controller中返回的页面名称 + suffix的value后缀 -->
    <bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/content/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 静态资源映射 
		原因：项目的静态资源被拦截了，请求资源的时候出现404错误
		解决方案：在spring.mvc中设置静态资源的映射路径
		映射原理：正常情况下是不能访问到WEB-INF下的这些文件，但是通过访问mapping下的路径映射到location下的路径
				eg:<mvc:resources location="/WEB-INF/js/" mapping="/js/**"/>
	-->
	<mvc:resources location="/js/" mapping="/js/**"/>
	<mvc:resources location="/css/" mapping="/css/**"/>
	<mvc:resources location="/images/" mapping="/images/**"/>
	<mvc:resources location="/json/" mapping="/json/**"/>
	
	<!--配置多媒体文件解析器  -->
	<bean id ="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置默认编码 -->
		<property name="defaultEncoding" value="UTF-8"></property>
		<!-- 设定文件上传的最大值5MB,5*1024*1024 -->
		<property name="maxUploadSize" value = "5242880"></property>
	</bean>
	
	<!-- 配置登录拦截器 ，当提交订单，查看订单的等订单操作一定要先登录系统 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/close/assets/**"/>
			<mvc:exclude-mapping path="/assets/login" /><!-- 不匹配的 -->
			<mvc:exclude-mapping path="/assets/register" /><!-- 不匹配的 -->
			<mvc:exclude-mapping path="/assets/ex/*" /><!-- 不匹配的 -->  
			<!--先用item来测试 -->
			<!-- <mvc:mapping path="/item/**" /> -->
			<bean class="com.assests.web.LoginInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
</beans>         